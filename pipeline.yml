---
resources:
    - name: source-code
      type: git
      source:
          uri: https://github.com/spring-projects/spring-petclinic.git
          branch: master

    - name: compiled-jar
      type: s3
      source:
          bucket: devopsdayberlin
          endpoint: http://35.240.36.56:9000
          disable_ssl: true
          access_key_id: admin
          secret_access_key: devopsdayberlin2018
          regexp: spring-petclinic-(.*).jar

    - name: version
      type: semver
      source:
          driver: s3
          bucket: devopsdayberlin
          endpoint: http://35.240.36.56:9000
          disable_ssl: true
          access_key_id: admin
          secret_access_key: devopsdayberlin2018
          key: workshop/release-version

jobs:
    - name: build
      plan:
          - get: source-code
          - get: version
            params:
                pre: alpha
          - task: compile
            config:
                platform: linux
                image_resource:
                    type: docker-image
                    source:
                        repository: openjdk
                        tag: 8-jdk-slim
                inputs:
                    - name: source-code
                    - name: version
                outputs:
                    - name: release-jar
                run:
                    path: /bin/sh
                    args:
                        - -c
                        - |
                            set -eu
                            cd source-code
                            ./mvnw versions:set -DnewVersion=$(cat ../version/version)
                            ./mvnw package

                            cd ..

                            cp source-code/target/*.jar release-jar/
          - put: version
            params:
                file: version/version
          - put: compiled-jar
            params:
                file: release-jar/*.jar

    - name: perf-test
      plan:
          - get: compiled-jar
            passed: [build]
            trigger: true
          - get: source-code
            passed: [build]
          - do:
                - task: deploy-to-perf-env
                  config:
                      platform: linux
                      image_resource:
                          type: docker-image
                          source:
                              repository: governmentpaas/cf-cli
                      inputs:
                          - name: compiled-jar
                      params:
                          CF_API: ((cf_api))
                          CF_USERNAME: ((cf_user))
                          CF_PASSWORD: ((cf_password))
                          CF_SPACE: ((cf_perf_space))
                          CF_ORG: ((cf_perf_org))
                          APP_NAME: ((cf_test_app_name))
                      run:
                          path: /bin/sh
                          args:
                              - -c
                              - |
                                  set -eu
                                  cf api $CF_API --skip-ssl-validation
                                  cf auth $CF_USERNAME $CF_PASSWORD
                                  cf target -o $CF_ORG -s $CF_SPACE
                                  cf push $APP_NAME -p compiled-jar/*.jar
                - task: run-perf-test
                  config:
                      platform: linux
                      image_resource:
                          type: docker-image
                          source:
                              repository: justb4/jmeter
                      inputs:
                          - name: source-code
                      params:
                          PETCLINIC_HOST: http://((cf_test_app_name)).apps.nickel.cf-app.com/
                          PETCLINIC_PORT: 80
                      run:
                          path: /bin/sh
                          args:
                              - -c
                              - |
                                  set -eu
                                  jmeter -n -t source-code/src/test/jmeter/petclinic_test_plan.jmx -l ./log.jtl
            ensure:
              task: delete-app
              config:
                  platform: linux
                  image_resource:
                      type: docker-image
                      source:
                          repository: governmentpaas/cf-cli
                  inputs:
                      - name: compiled-jar
                  params:
                      CF_API: ((cf_api))
                      CF_USERNAME: ((cf_user))
                      CF_PASSWORD: ((cf_password))
                      CF_SPACE: ((cf_perf_space))
                      CF_ORG: ((cf_perf_org))
                      APP_NAME: ((cf_test_app_name))
                  run:
                      path: /bin/sh
                      args:
                          - -c
                          - |
                              set -eu
                              cf api $CF_API --skip-ssl-validation
                              cf auth $CF_USERNAME $CF_PASSWORD
                              cf target -o $CF_ORG -s $CF_SPACE
                              cf delete -f $APP_NAME

    - name: deploy
      plan:
          - aggregate:
                - get: source-code
                  passed: [perf-test]
                - get: compiled-jar
                  trigger: true
                  passed: [perf-test]
          - task: push-to-prod
            config:
                platform: linux
                image_resource:
                    type: docker-image
                    source:
                        repository: governmentpaas/cf-cli
                inputs:
                    - name: compiled-jar
                params:
                    CF_API: ((cf_api))
                    CF_USERNAME: ((cf_user))
                    CF_PASSWORD: ((cf_password))
                    CF_SPACE: ((cf_prod_space))
                    CF_ORG: ((cf_prod_org))
                    APP_NAME: ((cf_prod_app_name))
                run:
                    path: /bin/sh
                    args:
                        - -c
                        - |
                            set -eu
                            cf api $CF_API --skip-ssl-validation
                            cf auth $CF_USERNAME $CF_PASSWORD
                            cf target -o $CF_ORG -s $CF_SPACE
                            cf push $APP_NAME -p compiled-jar/*.jar
